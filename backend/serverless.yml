# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: tdngg
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: whistleguard-backend
# "service" is the name of this project. This will also be added to your AWS resource names.
service: backend

stages:
  default:
    params:
      tableName: "whistle-reports-dev"

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-southeast-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - s3:PutObject
          Resource:
            - Fn::GetAtt: [UsersTable, Arn]
            - arn:aws:dynamodb:ap-southeast-1:365152039398:table/whistle-reports-dev

        - Effect: Allow
          Action: s3:PutObject
          Resource: arn:aws:s3:::whistleguard-files/uploads/*

        - Effect: Allow
          Action:
            - kms:Encrypt
            - kms:GenerateDataKey
          Resource: arn:aws:kms:ap-southeast-1:365152039398:key/ef7702ec-857b-4d7f-b160-7859aff9f534
  environment:
    REPORTS_TABLE: whistle-reports-dev
    OPENAI_API_KEY: ${env:OPENAI_API_KEY}
    # AWS_REGION: ap-southeast-1
    S3_BUCKET: whistleguard-files
    KMS_KEY_ID: arn:aws:kms:ap-southeast-1:365152039398:key/ef7702ec-857b-4d7f-b160-7859aff9f534
  httpApi:
    cors:
      allowedOrigins:
        - "http://localhost:5173"       # Vite dev server, change if needed
        - "https://your-prod-site.com"  # add prod domain later
      allowedHeaders:
        - Content-Type
        - x-amz-server-side-encryption
        - x-amz-server-side-encryption-aws-kms-key-id
      allowedMethods:
        - GET
        - POST
        - PUT
      maxAge: 3600   

functions:
  api:
    handler: handler.handler
    events:
      - httpApi:
          path: /{proxy+}
          method: ANY
                  

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: users-reports-dev

    ReportsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: token
            AttributeType: S
        KeySchema:
          - AttributeName: token
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: whistle-reports-dev

plugins:
  - serverless-offline